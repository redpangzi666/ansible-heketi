---
# tasks file for base
- name: disable selinux in file
  lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=disabled'
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: disable selinux in commond
  shell: setenforce 0
  ignore_errors: True
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: stop and disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: Copy id_rsa to all node
  copy:
    src: /root/.ssh/id_rsa
    dest: /root/.ssh/id_rsa
    mode: 0600
  ignore_errors: True

- name: copy base package to all node
  unarchive:
    src: base.tar.gz
    dest: /tmp
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: rpm base
  shell: yum localinstall -y  /tmp/base/*.rpm
  ignore_errors: True
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: start glusterfs
  systemd:
    state: started
    name: glusterd
    enabled: yes
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: check service
  copy: src=check-glusterd.sh dest=/tmp/check-glusterd.sh owner=root group=root mode=755
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: sh check-service
  shell: sh /tmp/check-glusterd.sh
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: start glusterfs
  systemd:
    state: started
    name: glusterfsd
    enabled: yes
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: check service
  copy: src=check-glusterfsd.sh dest=/tmp/check-glusterfsd.sh owner=root group=root mode=755
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: sh check-service
  shell: sh /tmp/check-glusterfsd.sh
  when: inventory_hostname in groups['glusterfs_nodes'] and ansible_os_family == "RedHat"

- name: copy heketi package to heketi node
  unarchive:
    src: heketi.tar.gz
    dest: /tmp
  when: inventory_hostname in groups['glusterfs_nodes'][0] and ansible_os_family == "RedHat"

- name: rpm heketi
  shell: rpm -Uvh /tmp/heketi/*.rpm
  ignore_errors: True
  when: inventory_hostname in groups['glusterfs_nodes'][0] and ansible_os_family == "RedHat"
    
- name: copy heketi.json
  copy: src=heketi.json dest=/etc/heketi/heketi.json mode=0644 owner=root group=root
  when: inventory_hostname in groups['glusterfs_nodes'][0] and ansible_os_family == "RedHat"

- name: copy heketi.service
  copy: src=heketi.service dest=/usr/lib/systemd/system/heketi.service  mode=0644 owner=root group=root
  when: inventory_hostname in groups['glusterfs_nodes'][0] and ansible_os_family == "RedHat"

- name: start heketi
  systemd:
    state: started
    name: heketi
    enabled: yes
  when: inventory_hostname in groups['glusterfs_nodes'][0] and ansible_os_family == "RedHat"
